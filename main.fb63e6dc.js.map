{"version":3,"sources":["scripts/main.js"],"names":["tHead","document","querySelector","tBody","tRow","querySelectorAll","addEventListener","e","cellIndex","target","sort","a","b","type","textContent","aText","cells","bText","localeCompare","normalize","item","slice","split","join","forEach","append"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAC/BE,EAAWD,EAAAA,EAAME,iBAAiB,OAExCL,EAAMM,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAAYD,EAAEE,OAAOD,UAE3BJ,EAAKM,KAAK,SAACC,EAAGC,GACNC,IAAAA,EAAON,EAAEE,OAAOK,YAChBC,EAAQJ,EAAEK,MAAMR,GAAWM,YAC3BG,EAAQL,EAAEI,MAAMR,GAAWM,YAEzBD,OAAAA,GACD,IAAA,OACA,IAAA,WACIE,OAAAA,EAAMG,cAAcD,GAExB,IAAA,MACIF,OAAAA,EAAQE,EAEZ,IAAA,SACGE,IAAAA,EAAY,SAACC,GAASA,OAAAA,EAAKC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAEnDJ,OAAAA,EAAUJ,GAASI,EAAUF,MAK1Cb,EAAKoB,QAAQ,SAAAJ,GAAQjB,OAAAA,EAAMsB,OAAOL","file":"main.fb63e6dc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tHead = document.querySelector('thead');\nconst tBody = document.querySelector('tbody');\nconst tRow = [...tBody.querySelectorAll('tr')];\n\ntHead.addEventListener('click', (e) => {\n  const cellIndex = e.target.cellIndex;\n\n  tRow.sort((a, b) => {\n    const type = e.target.textContent;\n    const aText = a.cells[cellIndex].textContent;\n    const bText = b.cells[cellIndex].textContent;\n\n    switch (type) {\n      case 'Name':\n      case 'Position':\n        return aText.localeCompare(bText);\n\n      case 'Age':\n        return aText - bText;\n\n      case 'Salary':\n        const normalize = (item) => item.slice(1).split(',').join('');\n\n        return normalize(aText) - normalize(bText);\n      default:\n    }\n  });\n\n  tRow.forEach(item => tBody.append(item));\n});\n"]}